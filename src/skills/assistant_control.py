import yaml
from pathlib import Path
import sys


def change_language(lang_code):
    
    config_path = Path("src/core/config.yaml")
    with open(config_path, "r", encoding="utf-8") as f:
        config = yaml.safe_load(f)

    config["language"] = lang_code
    with open(config_path, "w", encoding="utf-8") as f:
        yaml.dump(config, f, allow_unicode=True)

    return f"–Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {lang_code}."

def shutdown_assistant(*args, **kwargs):
    """
    –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É Jarvis.
    –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ–Ω–æ–≤—ã–µ –≤–æ—Ä–∫–µ—Ä—ã –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å.
    """
    print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Jarvis...")
    print(*args, **kwargs)
    # context = kwargs.get("context", {})
    # workers = context.get("workers", [])

    # # –ü—Ä–æ–±—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤—Å–µ –ø–æ—Ç–æ–∫–∏
    # for w in workers:
    #     if hasattr(w, "stop"):
    #         try:
    #             w.stop()
    #             print(f"[INFO] üîª –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Ç–æ–∫: {w.name}")
    #         except Exception as e:
    #             print(f"[WARN] –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {w.name}: {e}")

    # # –ï—Å–ª–∏ –ø–æ—Ç–æ–∫–æ–≤ –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
    # print("üëã Jarvis –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.")
    # sys.exit(0)
